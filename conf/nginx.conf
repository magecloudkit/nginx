user  root;
worker_processes  4;  # 2 * Number of CPUs

# route logs to stdout for docker
#error_log  /var/log/nginx/error.log debug;
#pid        /var/run/nginx.pid;

events {
    worker_connections  10000;  # It's the key to high performance - have a lot of connections available
}

worker_rlimit_nofile    11000;  # Each connection needs a filehandle (or 2 if you are proxying)

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  'ip=$remote_addr forwarded=$http_x_forwarded_for host=$http_host method=$request_method status=$status length=$body_bytes_sent '
                      '$upstream_http_x_request_stats total=$request_time upstream_time=$upstream_response_time '
                      'ua="$http_user_agent" uri="$request_uri" ref="$http_referer"';

    access_log  /var/log/nginx/access.log  main;

    sendfile       on;
    tcp_nopush     on;

    keepalive_timeout  65;

    # support bigger uploads
    client_body_buffer_size 50M;
    client_max_body_size 50M;

    # gzip - be wary of the BREACH attack - http://breachattack.com/
    gzip on;
    gzip_disable "msie6";

    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/xml+rss
        image/svg+xml;
    gzip_vary on;

    upstream fastcgi_backend {
        server PHP_HOST:PHP_PORT;
    }

    server {
        listen 80;
        server_name localhost;
        set $MAGE_ROOT /var/www/html;
        set $MAGE_MODE APP_MAGE_MODE;
        set $HTTPS_PROTO HTTPS_VALUE;
        include /etc/nginx/nginx.mage.conf;
    }
}
